{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\bank-statement-analyser\\\\mini-bank-statement-analyzer\\\\frontend\\\\src\\\\components\\\\FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileUpload({\n  onUpload\n}) {\n  _s();\n  const [file, setFile] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState(0); // Progress state\n  const [isUploading, setIsUploading] = useState(false); // Track upload status\n\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!file) return alert(\"Please select a file.\");\n    setIsUploading(true); // Start uploading\n\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        },\n        onUploadProgress: progressEvent => {\n          const percent = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setUploadProgress(percent);\n        }\n      });\n      console.log(\"Response from server:\", response);\n\n      // Check if backend response has a message\n      if (response && response.data && response.data.message) {\n        alert(response.data.message); // Success message from backend\n      } else {\n        alert(\"File uploaded successfully.\");\n      }\n      setUploadProgress(0); // Reset progress\n      setFile(null); // Reset file input\n      onUpload(); // Refresh data\n    } catch (error) {\n      console.error(\"Upload error:\", error);\n      if (error.response) {\n        console.log(\"Error Response:\", error.response);\n        alert(`Error: ${error.response.data.message || \"Error uploading file.\"}`);\n      } else {\n        alert(\"Error uploading file.\");\n      }\n    } finally {\n      setIsUploading(false); // Reset uploading status\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: isUploading,\n      children: isUploading ? \"Uploading...\" : \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), uploadProgress > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Upload Progress: \", uploadProgress, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 36\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(FileUpload, \"ibg3LDGOa+uO+sak/F8BfOp5Ih0=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","FileUpload","onUpload","_s","file","setFile","uploadProgress","setUploadProgress","isUploading","setIsUploading","handleFileChange","e","target","files","handleUpload","alert","formData","FormData","append","response","post","headers","onUploadProgress","progressEvent","percent","Math","round","loaded","total","console","log","data","message","error","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/bank-statement-analyser/mini-bank-statement-analyzer/frontend/src/components/FileUpload.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction FileUpload({ onUpload }) {\r\n    const [file, setFile] = useState(null);\r\n    const [uploadProgress, setUploadProgress] = useState(0); // Progress state\r\n    const [isUploading, setIsUploading] = useState(false); // Track upload status\r\n\r\n    const handleFileChange = (e) => {\r\n        setFile(e.target.files[0]);\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        if (!file) return alert(\"Please select a file.\");\r\n\r\n        setIsUploading(true); // Start uploading\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"file\", file);\r\n\r\n        try {\r\n            const response = await axios.post(\"http://localhost:5000/api/upload\", formData, {\r\n                headers: { \"Content-Type\": \"multipart/form-data\" },\r\n                onUploadProgress: (progressEvent) => {\r\n                    const percent = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n                    setUploadProgress(percent);\r\n                },\r\n            });\r\n\r\n            console.log(\"Response from server:\", response);\r\n\r\n            // Check if backend response has a message\r\n            if (response && response.data && response.data.message) {\r\n                alert(response.data.message); // Success message from backend\r\n            } else {\r\n                alert(\"File uploaded successfully.\");\r\n            }\r\n            \r\n            setUploadProgress(0); // Reset progress\r\n            setFile(null); // Reset file input\r\n            onUpload(); // Refresh data\r\n        } catch (error) {\r\n            console.error(\"Upload error:\", error);\r\n            if (error.response) {\r\n              console.log(\"Error Response:\", error.response);\r\n              alert(`Error: ${error.response.data.message || \"Error uploading file.\"}`);\r\n            } else {\r\n                alert(\"Error uploading file.\");\r\n            }\r\n            \r\n        } finally {\r\n            setIsUploading(false); // Reset uploading status\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"file\" onChange={handleFileChange} />\r\n            <button onClick={handleUpload} disabled={isUploading}>\r\n                {isUploading ? \"Uploading...\" : \"Upload\"}\r\n            </button>\r\n            {uploadProgress > 0 && <p>Upload Progress: {uploadProgress}%</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FileUpload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}