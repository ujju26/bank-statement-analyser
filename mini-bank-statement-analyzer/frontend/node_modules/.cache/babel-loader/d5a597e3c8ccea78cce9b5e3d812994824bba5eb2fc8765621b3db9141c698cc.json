{"ast":null,"code":"var _jsxFileName = \"D:\\\\bank-statement-analyser\\\\mini-bank-statement-analyzer\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { fetchTransactions } from \"./api/index\";\nimport FileUpload from \"./components/FileUpload\";\nimport { Pie, Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, LineElement, PointElement, Title, Tooltip, Legend, ArcElement } from \"chart.js\";\nimport { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\nimport \"./App.css\";\n\n// Register chart components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, LineElement, PointElement, Title, Tooltip, Legend, ArcElement);\nfunction App() {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const loadData = async () => {\n    try {\n      const transactionsData = await fetchTransactions();\n      const processed = transactionsData.data.map(tx => {\n        // Convert object keys to lowercase for consistency\n        const normalizedTx = Object.keys(tx).reduce((acc, key) => {\n          acc[key.toLowerCase()] = tx[key];\n          return acc;\n        }, {});\n\n        // Identify deposit & withdrawal fields dynamically\n        const deposit = parseFloat(normalizedTx[\"deposit\"] || normalizedTx[\"deposits\"] || normalizedTx[\"deposit (cr)\"] || 0);\n        const withdrawal = parseFloat(normalizedTx[\"withdrawal\"] || normalizedTx[\"withdrawable\"] || normalizedTx[\"withdrawal (cr)\"] || normalizedTx[\"withdrawal (dr)\"] || 0);\n        const amount = parseFloat(normalizedTx[\"amount\"] || 0);\n        if (deposit || withdrawal) {\n          return {\n            ...tx,\n            Amount: deposit - withdrawal\n          };\n        }\n        if (\"amount\" in normalizedTx) {\n          return {\n            ...tx,\n            Amount: amount\n          };\n        }\n        return {\n          ...tx,\n          Amount: 0\n        }; // Default case\n      });\n      setTransactions(processed);\n      setDataLoaded(true);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const calculateSummary = () => {\n    let totalIncome = 0;\n    let totalExpense = 0;\n    transactions.forEach(tx => {\n      if (tx.Amount > 0) {\n        totalIncome += tx.Amount;\n      } else {\n        totalExpense += Math.abs(tx.Amount);\n      }\n    });\n    return {\n      totalIncome,\n      totalExpense\n    };\n  };\n  const generatePieChartData = () => {\n    const categoryTotals = {};\n    transactions.forEach(tx => {\n      const category = tx.Category || tx.category || \"Uncategorized\";\n      categoryTotals[category] = (categoryTotals[category] || 0) + Math.abs(tx.Amount || 0);\n    });\n    const labels = Object.keys(categoryTotals);\n    const data = Object.values(categoryTotals);\n    return {\n      labels,\n      datasets: [{\n        label: \"Transaction Categories\",\n        data,\n        backgroundColor: [\"#3498db\",\n        // Blue (active tab color)\n        \"#2ecc71\",\n        // Green (income or positive transactions)\n        \"#e74c3c\",\n        // Red (expenses or negative transactions)\n        \"#f1c40f\",\n        // Yellow (neutral or miscellaneous)\n        \"#9b59b6\",\n        // Purple (special categories)\n        \"#e67e22\",\n        // Orange (highlighted categories)\n        \"#1abc9c\",\n        // Turquoise (variety and contrast)\n        \"#95a5a6\",\n        // Grey (default or uncategorized)\n        \"#34495e\" // Dark Blue (good contrast with dark theme)\n        ],\n        hoverOffset: 4\n      }]\n    };\n  };\n  const generateLineChartData = () => {\n    const sortedTx = [...transactions].sort((a, b) => {\n      const dA = new Date(a.transaction_date || a.Date);\n      const dB = new Date(b.transaction_date || b.Date);\n      return dA - dB;\n    });\n    const labels = [];\n    const data = [];\n    let balance = 0;\n    sortedTx.forEach(tx => {\n      const date = new Date(tx.transaction_date || tx.Date);\n      labels.push(date.toLocaleDateString());\n      balance += tx.Amount || 0;\n      data.push(balance);\n    });\n    return {\n      labels,\n      datasets: [{\n        label: \"Net Account Balance\",\n        data,\n        fill: false,\n        borderColor: \"rgb(75, 192, 192)\",\n        tension: 0.1\n      }]\n    };\n  };\n  const summaryData = calculateSummary();\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"app-title\",\n        children: \"Mini Bank Statement Analyzer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-container\",\n        children: /*#__PURE__*/_jsxDEV(FileUpload, {\n          onUploadSuccess: loadData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tabs\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/transactions\",\n          className: \"tab-link\",\n          children: \"Transactions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/summary\",\n          className: \"tab-link\",\n          children: \"Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/chart\",\n          className: \"tab-link\",\n          children: \"Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/lineChart\",\n          className: \"tab-link\",\n          children: \"Line Graph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/transactions\",\n          element: dataLoaded && /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"transaction-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Transactions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"transaction-table\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: transactions.length > 0 && Object.keys(transactions[0]).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: key\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 95\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: transactions.map(tx => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: Object.keys(tx).map(key => /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: tx[key]\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 69\n                  }, this))\n                }, tx.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/summary\",\n          element: dataLoaded && /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"summary-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Summary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-cards\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"summary-card income\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Total Income\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"\\u20B9\", summaryData.totalIncome.toLocaleString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"summary-card expense\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Total Expense\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"\\u20B9\", summaryData.totalExpense.toLocaleString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"summary-card balance\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Net Balance\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"\\u20B9\", (summaryData.totalIncome - summaryData.totalExpense).toLocaleString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/chart\",\n          element: dataLoaded && /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"chart-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Category Pie Chart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(Pie, {\n                data: generatePieChartData(),\n                options: {\n                  maintainAspectRatio: false\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/lineChart\",\n          element: dataLoaded && /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"line-chart-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Net Account Balance Line Graph\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(Line, {\n                data: generateLineChartData(),\n                options: {\n                  maintainAspectRatio: false\n                }\n              }, \"lineChart\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"home-container\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kRXmm+DAgHcEaPQyWymzPbhlbUQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","fetchTransactions","FileUpload","Pie","Line","Chart","ChartJS","CategoryScale","LinearScale","LineElement","PointElement","Title","Tooltip","Legend","ArcElement","BrowserRouter","Router","Route","Routes","Link","jsxDEV","_jsxDEV","register","App","_s","transactions","setTransactions","dataLoaded","setDataLoaded","loadData","transactionsData","processed","data","map","tx","normalizedTx","Object","keys","reduce","acc","key","toLowerCase","deposit","parseFloat","withdrawal","amount","Amount","error","console","calculateSummary","totalIncome","totalExpense","forEach","Math","abs","generatePieChartData","categoryTotals","category","Category","labels","values","datasets","label","backgroundColor","hoverOffset","generateLineChartData","sortedTx","sort","a","b","dA","Date","transaction_date","dB","balance","date","push","toLocaleDateString","fill","borderColor","tension","summaryData","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onUploadSuccess","to","path","element","length","id","toLocaleString","options","maintainAspectRatio","_c","$RefreshReg$"],"sources":["D:/bank-statement-analyser/mini-bank-statement-analyzer/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { fetchTransactions } from \"./api/index\";\r\nimport FileUpload from \"./components/FileUpload\";\r\nimport { Pie, Line } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  LineElement,\r\n  PointElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  ArcElement,\r\n} from \"chart.js\";\r\nimport { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\n// Register chart components\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  LineElement,\r\n  PointElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  ArcElement\r\n);\r\n\r\nfunction App() {\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n  const loadData = async () => {\r\n      try {\r\n          const transactionsData = await fetchTransactions();\r\n\r\n          const processed = transactionsData.data.map((tx) => {\r\n              // Convert object keys to lowercase for consistency\r\n              const normalizedTx = Object.keys(tx).reduce((acc, key) => {\r\n                  acc[key.toLowerCase()] = tx[key]; \r\n                  return acc;\r\n              }, {});\r\n\r\n              // Identify deposit & withdrawal fields dynamically\r\n              const deposit = parseFloat(\r\n                  normalizedTx[\"deposit\"] || \r\n                  normalizedTx[\"deposits\"] || \r\n                  normalizedTx[\"deposit (cr)\"] || 0\r\n              );\r\n              const withdrawal = parseFloat(\r\n                  normalizedTx[\"withdrawal\"] || \r\n                  normalizedTx[\"withdrawable\"] || \r\n                  normalizedTx[\"withdrawal (cr)\"] ||\r\n                  normalizedTx[\"withdrawal (dr)\"] || 0\r\n              );\r\n              const amount = parseFloat(normalizedTx[\"amount\"] || 0);\r\n\r\n              if (deposit || withdrawal) {\r\n                  return { ...tx, Amount: deposit - withdrawal };\r\n              }\r\n\r\n              if (\"amount\" in normalizedTx) {\r\n                  return { ...tx, Amount: amount };\r\n              }\r\n\r\n              return { ...tx, Amount: 0 }; // Default case\r\n          });\r\n\r\n          setTransactions(processed);\r\n          setDataLoaded(true);\r\n      } catch (error) {\r\n          console.error(\"Error fetching data:\", error);\r\n      }\r\n  };\r\n\r\n\r\n\r\n  const calculateSummary = () => {\r\n    let totalIncome = 0;\r\n    let totalExpense = 0;\r\n    transactions.forEach((tx) => {\r\n      if (tx.Amount > 0) {\r\n        totalIncome += tx.Amount;\r\n      } else {\r\n        totalExpense += Math.abs(tx.Amount);\r\n      }\r\n    });\r\n    return { totalIncome, totalExpense };\r\n  };\r\n\r\n  const generatePieChartData = () => {\r\n    const categoryTotals = {};\r\n    transactions.forEach((tx) => {\r\n      const category = tx.Category || tx.category || \"Uncategorized\";\r\n      categoryTotals[category] = (categoryTotals[category] || 0) + Math.abs(tx.Amount || 0);\r\n    });\r\n    const labels = Object.keys(categoryTotals);\r\n    const data = Object.values(categoryTotals);\r\n    return {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: \"Transaction Categories\",\r\n          data,\r\n          backgroundColor: [\r\n            \"#3498db\",  // Blue (active tab color)\r\n            \"#2ecc71\",  // Green (income or positive transactions)\r\n            \"#e74c3c\",  // Red (expenses or negative transactions)\r\n            \"#f1c40f\",  // Yellow (neutral or miscellaneous)\r\n            \"#9b59b6\",  // Purple (special categories)\r\n            \"#e67e22\",  // Orange (highlighted categories)\r\n            \"#1abc9c\",  // Turquoise (variety and contrast)\r\n            \"#95a5a6\",  // Grey (default or uncategorized)\r\n            \"#34495e\",  // Dark Blue (good contrast with dark theme)\r\n          ],\r\n          hoverOffset: 4,\r\n        },\r\n      ],\r\n    };\r\n  };\r\n\r\n  const generateLineChartData = () => {\r\n    const sortedTx = [...transactions].sort((a, b) => {\r\n      const dA = new Date(a.transaction_date || a.Date);\r\n      const dB = new Date(b.transaction_date || b.Date);\r\n      return dA - dB;\r\n    });\r\n\r\n    const labels = [];\r\n    const data = [];\r\n    let balance = 0;\r\n    sortedTx.forEach((tx) => {\r\n      const date = new Date(tx.transaction_date || tx.Date);\r\n      labels.push(date.toLocaleDateString());\r\n      balance += tx.Amount || 0;\r\n      data.push(balance);\r\n    });\r\n\r\n    return {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: \"Net Account Balance\",\r\n          data,\r\n          fill: false,\r\n          borderColor: \"rgb(75, 192, 192)\",\r\n          tension: 0.1,\r\n        },\r\n      ],\r\n    };\r\n  };\r\n\r\n  const summaryData = calculateSummary();\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"app-container\">\r\n        <h1 className=\"app-title\">Mini Bank Statement Analyzer</h1>\r\n\r\n        {/* File Upload Section */}\r\n        <div className=\"upload-container\">\r\n          <FileUpload onUploadSuccess={loadData} />\r\n        </div>\r\n\r\n        {/* Navigation Links */}\r\n        <div className=\"tabs\">\r\n          <Link to=\"/transactions\" className=\"tab-link\">Transactions</Link>\r\n          <Link to=\"/summary\" className=\"tab-link\">Summary</Link>\r\n          <Link to=\"/chart\" className=\"tab-link\">Chart</Link>\r\n          <Link to=\"/lineChart\" className=\"tab-link\">Line Graph</Link>\r\n        </div>\r\n\r\n        {/* Routes */}\r\n        <Routes>\r\n          <Route path=\"/transactions\" element={\r\n            dataLoaded && (\r\n              <section className=\"transaction-details\">\r\n                <h2>Transactions</h2>\r\n                <table className=\"transaction-table\">\r\n                  <thead>\r\n                    <tr>{transactions.length > 0 && Object.keys(transactions[0]).map((key) => <th key={key}>{key}</th>)}</tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {transactions.map((tx) => (\r\n                      <tr key={tx.id}>{Object.keys(tx).map((key) => <td key={key}>{tx[key]}</td>)}</tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </section>\r\n            )\r\n          } />\r\n          \r\n          <Route path=\"/summary\" element={\r\n            dataLoaded && (\r\n              <section className=\"summary-details\">\r\n                <h2>Summary</h2>\r\n                <div className=\"summary-cards\">\r\n                  <div className=\"summary-card income\">\r\n                    <h3>Total Income</h3>\r\n                    <p>₹{summaryData.totalIncome.toLocaleString()}</p>\r\n                  </div>\r\n                  <div className=\"summary-card expense\">\r\n                    <h3>Total Expense</h3>\r\n                    <p>₹{summaryData.totalExpense.toLocaleString()}</p>\r\n                  </div>\r\n                  <div className=\"summary-card balance\">\r\n                    <h3>Net Balance</h3>\r\n                    <p>₹{(summaryData.totalIncome - summaryData.totalExpense).toLocaleString()}</p>\r\n                  </div>\r\n                </div>\r\n              </section>\r\n            )\r\n          } />\r\n\r\n          <Route path=\"/chart\" element={\r\n            dataLoaded && (\r\n              <section className=\"chart-details\">\r\n                <h2>Category Pie Chart</h2>\r\n                <div className=\"chart-wrapper\">\r\n                  <Pie data={generatePieChartData()} options={{ maintainAspectRatio: false }} />\r\n                </div>\r\n              </section>\r\n            )\r\n          } />\r\n\r\n          <Route path=\"/lineChart\" element={\r\n            dataLoaded && (\r\n              <section className=\"line-chart-details\">\r\n                <h2>Net Account Balance Line Graph</h2>\r\n                <div className=\"chart-wrapper\">\r\n                  <Line key=\"lineChart\" data={generateLineChartData()} options={{ maintainAspectRatio: false }} />\r\n                </div>\r\n              </section>\r\n            )\r\n          } />\r\n\r\n          <Route path=\"/\" element={\r\n            <div className=\"home-container\">\r\n            </div>\r\n          } />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}